[{"id":"e96c5d40-9f4e-11ea-aaf2-4fbfecc08890","title":"Welcome to my blog","author":"kylin","square":"前端","excerpt":"本网站未对低版本浏览器兼容，为了得到最佳的体验效果，请尽量使用最新的chrome、edge、firefox等浏览器。 拒绝 ie6","time":"2020-5-26 20:46:26","url":"/assets/article/e96c5d40-9f4e-11ea-aaf2-4fbfecc08890","img":"/assets/cover/e96c5d40-9f4e-11ea-aaf2-4fbfecc08890.jpg"},{"id":"270e2df0-9f67-11ea-9994-f3ee2591b97b","title":"学习apply,call和bind","author":"kylin","square":"前端","excerpt":"bind 和 apply，call的作用一样，唯一不同的是 bind方法不会立即执行函数，而是新返回一个改变了上下文 this后的函数。","time":"2020-5-26 23:39:57","url":"/assets/article/270e2df0-9f67-11ea-9994-f3ee2591b97b","img":"/assets/cover/270e2df0-9f67-11ea-9994-f3ee2591b97b.jpg"},{"id":"fd3b20e0-9f67-11ea-9994-f3ee2591b97b","title":"线程和进程","author":"kylin","square":"前端","excerpt":"进程 是cpu资源分配的最小单位（是能够拥有资源和独立运行的最小单位） 线程 是cpu调度的最小单位（线程是建立在进程的基础上的一次程序运行单位，一个进程可以拥有多个线程）","time":"2020-5-26 23:45:56","url":"/assets/article/fd3b20e0-9f67-11ea-9994-f3ee2591b97b","img":"/assets/cover/fd3b20e0-9f67-11ea-9994-f3ee2591b97b.jpg"},{"id":"642b0ea0-9f68-11ea-9994-f3ee2591b97b","title":"比较构造函数和普通函数","author":"kylin","square":"前端","excerpt":"构造函数：使用new运算符初始化函数来新建一个对象。  普通函数：不使用new运算符的函数就是普通函数","time":"2020-5-26 23:48:49","url":"/assets/article/642b0ea0-9f68-11ea-9994-f3ee2591b97b","img":"/assets/cover/642b0ea0-9f68-11ea-9994-f3ee2591b97b.jpg"},{"id":"6ab50760-9f6a-11ea-9994-f3ee2591b97b","title":"HTTP 状态码","author":"kylin","square":"前端","excerpt":"403 (禁止) 服务器拒绝请求；  404 (未找到) 服务器找不到请求的网页；`500` (服务器内部错误) 服务器遇到错误，无法完成请求","time":"2020-5-27 0:03:19","url":"/assets/article/6ab50760-9f6a-11ea-9994-f3ee2591b97b","img":"/assets/cover/6ab50760-9f6a-11ea-9994-f3ee2591b97b.jpg"},{"id":"faa00a00-9f6f-11ea-9994-f3ee2591b97b","title":"jsonp跨域请求及原理","author":"kylin","square":"前端","excerpt":"域的概念  若 协议 + 域名 + 端口号 均相同，则为同域  跨域请求  所谓跨域请求是指：当前发起请求的域与该请求所指向资源的所在域不同。","time":"2020-5-27 0:43:08","url":"/assets/article/faa00a00-9f6f-11ea-9994-f3ee2591b97b","img":"/assets/cover/faa00a00-9f6f-11ea-9994-f3ee2591b97b.jpg"},{"id":"f13a6bc0-9f71-11ea-9994-f3ee2591b97b","title":"this 在 JS的四种函数调用模式下的指向","author":"kylin","square":"前端","excerpt":"this 是JavaScript的一个关键字，它是函数运行时，在函数内部自动生成的一个对象，只能在函数体内使用。  this 是函数运行时所在的环境对象。","time":"2020-5-27 0:57:11","url":"/assets/article/f13a6bc0-9f71-11ea-9994-f3ee2591b97b","img":"/assets/cover/f13a6bc0-9f71-11ea-9994-f3ee2591b97b.jpg"},{"id":"3b9c4a80-9fef-11ea-b1f3-e769e4e31ebc","title":"Javascript的深浅拷贝","author":"kylin","square":"前端","excerpt":"将对象赋值给另一个对象，事实上拷贝的是指针，这叫做浅拷贝。于是就有了另一个概念深拷贝，即建立新的内存空间放入要拷贝的对象","time":"2020-5-27 15:54:03","url":"/assets/article/3b9c4a80-9fef-11ea-b1f3-e769e4e31ebc","img":"/assets/cover/3b9c4a80-9fef-11ea-b1f3-e769e4e31ebc.jpg"},{"id":"8a09a730-9fef-11ea-b1f3-e769e4e31ebc","title":"我的markdown 的解析库","author":"kylin","square":"前端","excerpt":"最近写的网站需要实现对 markdown 文档的渲染,因此参考gfm规范实现了一个 markdown 的解析库，取名Venus 点这里直接看 Demo","time":"2020-5-27 15:56:15","url":"/assets/article/8a09a730-9fef-11ea-b1f3-e769e4e31ebc","img":"/assets/cover/8a09a730-9fef-11ea-b1f3-e769e4e31ebc.jpg"},{"id":"b01a5fa0-9fef-11ea-b1f3-e769e4e31ebc","title":"比较构造函数和普通函数","author":"kylin","square":"前端","excerpt":"构造函数：使用new运算符初始化函数来新建一个对象。  普通函数：不使用new运算符的函数就是普通函数","time":"2020-5-27 15:57:18","url":"/assets/article/b01a5fa0-9fef-11ea-b1f3-e769e4e31ebc","img":"/assets/cover/b01a5fa0-9fef-11ea-b1f3-e769e4e31ebc.jpg"}]